{"version":3,"sources":["App.styles.jsx","components/Statisctics/Statisctics.styles.jsx","components/Statisctics/Statisctics.jsx","components/FeedbackOptions/FeedbackOptions.styles.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.styles.jsx","components/Section/Section.jsx","components/Notification/Notification.styles.jsx","components/Notification/Notification.jsx","App.jsx","index.js"],"names":["Container","List","Item","Statisctics","good","neutral","bad","total","positivePercentage","ButtonBox","styled","div","Button","button","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","type","onClick","name","Title","h1","Wrapper","Section","title","children","p","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","event","target","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAEO,IAAMA,EAAS,sJCAf,IAAMC,EAAI,2KAUJC,EAAI,yK,OCRF,SAASC,EAAT,GAMX,IALAC,EAKD,EALCA,KACAC,EAID,EAJCA,QACAC,EAGD,EAHCA,IACAC,EAED,EAFCA,MACAC,EACD,EADCA,mBAEA,OACI,eAACP,EAAD,WACI,eAACC,EAAD,oBAAcE,KACd,eAACF,EAAD,uBAAiBG,KACjB,eAACH,EAAD,mBAAaI,KACb,eAACJ,EAAD,qBAAeK,KACf,eAACL,EAAD,iCAA0BM,EAA1B,U,0BCfCC,EAAYC,IAAOC,IAAV,kGAMTC,EAASF,IAAOG,OAAV,waCJJ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,cAACP,EAAD,UACGQ,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OACxB,cAACR,EAAD,CAEES,KAAK,SACLC,QAASN,EACTO,KAAMH,EAJR,SAMGA,GALIA,QCNR,I,EAAMI,EAAQd,IAAOe,GAAV,8IAOLC,EAAUhB,IAAOC,IAAV,6CCNL,SAASgB,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACrC,OACI,eAACH,EAAD,WACI,cAACF,EAAD,UAAQI,IACPC,KCNN,IAAML,EAAQd,IAAOoB,EAAV,mDCAH,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACnC,OAAO,cAAC,EAAD,UAASA,ICuDLC,MAlDf,WACI,MAAwBC,mBAAS,GAAjC,mBAAO9B,EAAP,KAAa+B,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAO7B,EAAP,KAAgB+B,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAO5B,EAAP,KAAY+B,EAAZ,KAGIC,EAAqB,kBAAMlC,EAAOC,EAAUC,GAqBhD,OACI,eAACN,EAAD,WACI,cAAC2B,EAAD,CAASC,MAAM,wBAAf,SACI,cAACd,EAAD,CACIC,QAAS,CAACX,OAAMC,UAASC,OACzBU,gBArBa,SAACuB,GAE1B,OADcA,EAAMC,OAAdjB,MAEF,IAAK,OACDY,GAAQ,SAAC/B,GAAD,OAAUA,EAAO,KACzB,MACJ,IAAK,UACDgC,GAAW,SAAC/B,GAAD,OAAaA,EAAU,KAClC,MACJ,IAAK,MACDgC,GAAO,SAAC/B,GAAD,OAASA,EAAM,KACtB,MACJ,QAAS,aAWT,cAACqB,EAAD,CAASC,MAAM,cAAf,SACKU,IAAuB,EACpB,cAACnC,EAAD,CACIC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO+B,IACP9B,mBAhChBiC,KAAKC,MAAa,IAAPtC,EAAakC,KAAwB,KAkCpC,cAACP,EAAD,CAAcC,QAAQ,4BC9C1CW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.34ce0174.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro'\n\nexport const Container = styled.div`\n width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n  \n`","import styled from '@emotion/styled/macro'\n\nexport const List = styled.ul`\n display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n  margin: 0;\n  padding: 0;\n`;\n\n\nexport const Item = styled.li`\n\nfont-weight: 500;\nfont-size: 20px;\nline-height: 1.14;\nletter-spacing: 0.03em;\nmargin-bottom: 10px;\nlist-style: none\n`;","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { List, Item } from \"./Statisctics.styles\";\n\nexport default function Statisctics({\n    good,\n    neutral,\n    bad,\n    total,\n    positivePercentage,\n}) {\n    return (\n        <List>\n            <Item>Good: { good}</Item>\n            <Item>Neutral: { neutral}</Item>\n            <Item>Bad: { bad}</Item>\n            <Item>Total: { total}</Item>\n            <Item>Positive feedback: {positivePercentage }%</Item>\n    </List>\n)\n};\nStatisctics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n}","import styled from '@emotion/styled';\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Button = styled.button`\n\n margin-right: 10px;\n  padding: 10px;\n\n  font-style: normal;\n  font-weight: normal;\n  font-size: 24px;\n\n  cursor: pointer;\n  outline: none;\n  border-radius: 5px;\n  background: white;\n  \n  box-shadow: 1px 2px 2px 0 rgb(0 0 0 / 0.5);\n  transition: box-shadow 250ms linear;\n  &:hover {\n   background-color:rgb(44, 154, 243);\n   box-shadow: 2px 5px 2px 0 rgb(0 0 0 / 0.5); \n  }\n  `","import { ButtonBox, Button } from './FeedbackOptions.styles';\nimport PropTypes from 'prop-types';\n\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <ButtonBox>\n      {Object.keys(options).map((option) => (\n        <Button\n          key={option}\n          type=\"button\"\n          onClick={onLeaveFeedback}\n          name={option}\n        >\n          {option}\n        </Button>\n      ))}\n    </ButtonBox>\n  )\n}\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n}","import styled from '@emotion/styled';\n\n\nexport const Title = styled.h1`\n  font-weight: bold;\n  font-size: 50px;\n  line-height: 1.19;\n  text-align: center;\n  letter-spacing: 0.03em;\n`;\nexport const Wrapper = styled.div`\npadding-top: 18px`;","\nimport PropTypes from \"prop-types\";\nimport { Title, Wrapper } from \"./Section.styles\";\n\nexport default function Section({ title, children }) {\n    return (\n        <Wrapper>\n            <Title>{title}</Title>\n            {children}\n      </Wrapper>\n    )\n};\nSection.propTypes = {\n    title: PropTypes.string,\n};","import styled from '@emotion/styled'\n\nexport const Title = styled.p`\ntext-align: center;\n\n`","import PropTypes from 'prop-types';\nimport {Title} from './Notification.styles'\nexport default function Notification({ message }) {\n    return <Title>{ message}</Title>\n}\nNotification.propTypes={\n    message: PropTypes.string.isRequired,\n}","import { useState } from 'react';\nimport { Container } from \"./App.styles\";\n\nimport Statisctics from \"./components/Statisctics/Statisctics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\"\nimport Section from \"./components/Section/Section\"\nimport Notification from \"./components/Notification/Notification\";\n\nfunction App() {\n    const [good, setGood] = useState(0)\n    const [neutral, setNeutral] = useState(0)\n    const [bad, setBad] = useState(0)\n\n\n  const countTotalFeedback = () => good + neutral + bad;\n    \n   const countPositiveFeedbackPercentage = () =>\n        Math.round(good * 100 / countTotalFeedback ()|| 0);\n      \n   const onLeaveFeedbackButton = (event) => {\n       const {name} = event.target\n        switch (name) {\n            case \"good\":\n                setGood((good) => good + 1);\n                break;\n            case \"neutral\":\n                setNeutral((neutral) => neutral + 1);\n                break;\n            case \"bad\":\n                setBad((bad) => bad + 1);\n                break;\n            default: return;\n        };\n    };\n    \n    return (\n        <Container>\n            <Section title=\"Please leave feedback\">\n                <FeedbackOptions\n                    options={{good, neutral, bad}}\n                    onLeaveFeedback={onLeaveFeedbackButton} />\n            </Section>\n            <Section title=\"Statisctics\">\n                {countTotalFeedback() > 0 ? (\n                    <Statisctics\n                        good={good}\n                        neutral={neutral}\n                        bad={bad}\n                        total={countTotalFeedback()}\n                        positivePercentage={countPositiveFeedbackPercentage()}\n                    /> ):(\n                    <Notification message=\"No feedback given\" />\n               )}\n            </Section>\n        </Container>\n    );\n};\n\nexport default App;\n    \n    \n    \n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}